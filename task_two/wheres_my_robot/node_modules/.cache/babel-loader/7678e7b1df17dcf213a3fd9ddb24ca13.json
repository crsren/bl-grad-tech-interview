{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/t1/wheres_my_robot/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.css\"; // function Square(props) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //   isActive: this.props.isActive,\n    // };\n    // this.handleStateChange = this.handleStateChange.bind(this);\n  } // componentWillReceiveProps(nextProps) {\n  //   this.setState({ data: nextProps.data });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-28 h-28 border-2 m-1\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"wall-e.png\",\n        alt: \"robot\",\n        className: \"h-12 w-12 \" + this.props.style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n} // class Grid extens React.Component {\n// TODO\n// }\n// TODO\n// class Console extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return (\n//     );\n//   }\n// }\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(25).fill(\"hidden\"),\n      pos: [null, null],\n      dir: null,\n      dir2Tailwind: {\n        NORTH: \"rotate-180\",\n        EAST: \"rotate-90\",\n        SOUTH: \"rotate-0\",\n        WEST: \"rotate-270\"\n      }\n    };\n    this.commands = {\n      place: args => {\n        // check if arguments ar valid\n        if (args.length !== 3) throw Error(\"Place: Should have 3 arguments\");\n        let [x, y, dir] = args; // format direction\n\n        dir = dir.replace(/['\"]/g, \"\");\n        dir = dir.toUpperCase();\n        if (isNaN(x) || isNaN(y) || ![\"NORTH\", \"SOUTH\", \"EAST\", \"WEST\"].includes(dir)) throw Error(\"Place: Invalid arguments\");else [x, y, dir] = [+x, +y, dir]; // check if position is within bounds\n\n        if (x < 0 || x > 4 || y < 0 || y > 4) throw Error(`Place: Position ${x}, ${y} out of bounds`); // update state\n\n        const squares = Array(25).fill(\"hidden\");\n        squares[5 * y + x] = this.state.dir2Tailwind[dir];\n        this.setState({\n          squares: squares,\n          pos: [x, y],\n          dir: dir.toUpperCase()\n        });\n      },\n      move: args => {\n        if (!this.state.dir) throw Error(\"Move: Robot not placed\");\n        if (args.length) throw Error(\"Move: Should have no arguments\");\n        let [x, y] = this.state.pos;\n        let dir = this.state.dir; // check if position is within bounds and move accordingly\n\n        if (dir === \"NORTH\" && y < 4) y++;else if (dir === \"SOUTH\" && y > 0) y--;else if (dir === \"EAST\" && x < 4) x++;else if (dir === \"WEST\" && x > 0) x--;else console.log(\"Move: Robot cannot move\"); // update state\n\n        const squares = Array(25).fill(\"hidden\");\n        squares[5 * y + x] = this.state.dir2Tailwind[dir];\n        this.setState({\n          squares: squares,\n          pos: [x, y]\n        });\n      },\n      left: args => {\n        if (!this.state.dir) throw Error(\"Left: Robot not placed\");\n        if (args.length) throw Error(\"Left: Should have no arguments\");\n        let dir = this.state.dir;\n        if (dir === \"NORTH\") dir = \"WEST\";else if (dir === \"WEST\") dir = \"SOUTH\";else if (dir === \"SOUTH\") dir = \"EAST\";else if (dir === \"EAST\") dir = \"NORTH\";else throw Error(\"Left: Robot cannot turn left\"); // update state\n\n        let [x, y] = this.state.pos;\n        const squares = Array(25).fill(\"hidden\");\n        squares[5 * y + x] = this.state.dir2Tailwind[dir++];\n        this.setState({\n          squares: squares,\n          dir: dir\n        });\n      },\n      right: args => {\n        if (!this.state.dir) throw Error(\"Right: Robot not placed\");\n        if (args.length) throw Error(\"Right: Should have no arguments\");\n        let dir = this.state.dir;\n        if (dir === \"NORTH\") dir = \"EAST\";else if (dir === \"EAST\") dir = \"SOUTH\";else if (dir === \"SOUTH\") dir = \"WEST\";else if (dir === \"WEST\") dir = \"NORTH\";else throw Error(\"Right: Robot cannot turn right\"); // update state\n\n        let [x, y] = this.state.pos;\n        const squares = Array(25).fill(\"hidden\");\n        squares[5 * y + x] = this.state.dir2Tailwind[dir--];\n        this.setState({\n          squares: squares,\n          dir: dir\n        });\n      },\n      report: args => {\n        if (!this.state.dir) throw Error(\"Report: Robot not placed\");\n        if (args.length) throw Error(\"Report: Should have no arguments\");\n        let msg = `Robot is at position ${this.state.pos[0]}, ${this.state.pos[1]} and facing ${this.state.dir}`;\n        console.log(msg);\n        alert(msg);\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.processInput(this.state.value);\n  }\n\n  processInput(input) {\n    try {\n      let command = input.split(\"(\")[0];\n      command = command.toLowerCase();\n      if (command === input) throw new Error(\"Invalid command syntax\");\n      let args = input.split(\"(\")[1].split(\")\")[0];\n      if (args === \"\") args = [];else args = args.split(\",\").map(arg => arg.trim());\n\n      if (command in this.commands) {\n        let fn = this.commands[command]; // alert(`Command ${command} with arguments ${args}`);\n\n        fn(args);\n      } else {\n        throw new Error(`Command ${command} not found!`);\n      }\n    } catch (e) {\n      alert(e.message);\n      console.log(e);\n    }\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      style: this.state.squares[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-col p-8 align-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-4xl py-2\",\n        children: \"Where's my Robot?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Git Repository (TODO)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col py-8 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [this.renderSquare(20), this.renderSquare(21), this.renderSquare(22), this.renderSquare(23), this.renderSquare(24)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [this.renderSquare(15), this.renderSquare(16), this.renderSquare(17), this.renderSquare(18), this.renderSquare(19)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [this.renderSquare(10), this.renderSquare(11), this.renderSquare(12), this.renderSquare(13), this.renderSquare(14)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [this.renderSquare(5), this.renderSquare(6), this.renderSquare(7), this.renderSquare(8), this.renderSquare(9)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2), this.renderSquare(3), this.renderSquare(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border rounded-l\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-semibold pt-1 pb-3\",\n            children: [\">\", \"_ Terminal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"text-l font-mono font-medium\",\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"robo: $\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"py-2 pl-2 focus:outline-none\",\n                type: \"text\",\n                value: this.value,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"bg-green-700 mx-3 my-2 p-2 rounded text-mono font-semibold text-white\",\n              type: \"submit\",\n              value: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 286,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/chris/Desktop/t1/wheres_my_robot/src/index.js"],"names":["React","ReactDOM","Square","Component","constructor","props","render","style","Game","state","squares","Array","fill","pos","dir","dir2Tailwind","NORTH","EAST","SOUTH","WEST","commands","place","args","length","Error","x","y","replace","toUpperCase","isNaN","includes","setState","move","console","log","left","right","report","msg","alert","handleChange","bind","handleSubmit","event","value","target","preventDefault","processInput","input","command","split","toLowerCase","map","arg","trim","fn","e","message","renderSquare","i","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.css\";\n// function Square(props) {\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   isActive: this.props.isActive,\n    // };\n\n    // this.handleStateChange = this.handleStateChange.bind(this);\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   this.setState({ data: nextProps.data });\n  // }\n\n  render() {\n    return (\n      <div className=\"w-28 h-28 border-2 m-1\">\n        <img\n          src=\"wall-e.png\"\n          alt=\"robot\"\n          className={\"h-12 w-12 \" + this.props.style}\n        />\n      </div>\n    );\n  }\n}\n// class Grid extens React.Component {\n// TODO\n// }\n\n// TODO\n// class Console extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return (\n//     );\n//   }\n// }\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      squares: Array(25).fill(\"hidden\"),\n      pos: [null, null],\n      dir: null,\n      dir2Tailwind: {\n        NORTH: \"rotate-180\",\n        EAST: \"rotate-90\",\n        SOUTH: \"rotate-0\",\n        WEST: \"rotate-270\",\n      },\n    };\n\n    this.commands = {\n      place: (args) => {\n        // check if arguments ar valid\n        if (args.length !== 3) throw Error(\"Place: Should have 3 arguments\");\n        let [x, y, dir] = args;\n\n        // format direction\n        dir = dir.replace(/['\"]/g, \"\");\n        dir = dir.toUpperCase();\n        if (\n          isNaN(x) ||\n          isNaN(y) ||\n          ![\"NORTH\", \"SOUTH\", \"EAST\", \"WEST\"].includes(dir)\n        )\n          throw Error(\"Place: Invalid arguments\");\n        else [x, y, dir] = [+x, +y, dir];\n\n        // check if position is within bounds\n        if (x < 0 || x > 4 || y < 0 || y > 4)\n          throw Error(`Place: Position ${x}, ${y} out of bounds`);\n\n        // update state\n        const squares = Array(25).fill(\"hidden\");\n        squares[5 * y + x] = this.state.dir2Tailwind[dir];\n        this.setState({\n          squares: squares,\n          pos: [x, y],\n          dir: dir.toUpperCase(),\n        });\n      },\n      move: (args) => {\n        if (!this.state.dir) throw Error(\"Move: Robot not placed\");\n        if (args.length) throw Error(\"Move: Should have no arguments\");\n\n        let [x, y] = this.state.pos;\n        let dir = this.state.dir;\n\n        // check if position is within bounds and move accordingly\n        if (dir === \"NORTH\" && y < 4) y++;\n        else if (dir === \"SOUTH\" && y > 0) y--;\n        else if (dir === \"EAST\" && x < 4) x++;\n        else if (dir === \"WEST\" && x > 0) x--;\n        else console.log(\"Move: Robot cannot move\");\n\n        // update state\n        const squares = Array(25).fill(\"hidden\");\n        squares[5 * y + x] = this.state.dir2Tailwind[dir];\n        this.setState({\n          squares: squares,\n          pos: [x, y],\n        });\n      },\n      left: (args) => {\n        if (!this.state.dir) throw Error(\"Left: Robot not placed\");\n        if (args.length) throw Error(\"Left: Should have no arguments\");\n\n        let dir = this.state.dir;\n        if (dir === \"NORTH\") dir = \"WEST\";\n        else if (dir === \"WEST\") dir = \"SOUTH\";\n        else if (dir === \"SOUTH\") dir = \"EAST\";\n        else if (dir === \"EAST\") dir = \"NORTH\";\n        else throw Error(\"Left: Robot cannot turn left\");\n\n        // update state\n        let [x, y] = this.state.pos;\n        const squares = Array(25).fill(\"hidden\");\n        squares[5 * y + x] = this.state.dir2Tailwind[dir++];\n        this.setState({\n          squares: squares,\n          dir: dir,\n        });\n      },\n      right: (args) => {\n        if (!this.state.dir) throw Error(\"Right: Robot not placed\");\n        if (args.length) throw Error(\"Right: Should have no arguments\");\n\n        let dir = this.state.dir;\n        if (dir === \"NORTH\") dir = \"EAST\";\n        else if (dir === \"EAST\") dir = \"SOUTH\";\n        else if (dir === \"SOUTH\") dir = \"WEST\";\n        else if (dir === \"WEST\") dir = \"NORTH\";\n        else throw Error(\"Right: Robot cannot turn right\");\n\n        // update state\n        let [x, y] = this.state.pos;\n        const squares = Array(25).fill(\"hidden\");\n        squares[5 * y + x] = this.state.dir2Tailwind[dir--];\n        this.setState({\n          squares: squares,\n          dir: dir,\n        });\n      },\n      report: (args) => {\n        if (!this.state.dir) throw Error(\"Report: Robot not placed\");\n        if (args.length) throw Error(\"Report: Should have no arguments\");\n\n        let msg = `Robot is at position ${this.state.pos[0]}, ${this.state.pos[1]} and facing ${this.state.dir}`;\n        console.log(msg);\n        alert(msg);\n      },\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.processInput(this.state.value);\n  }\n\n  processInput(input) {\n    try {\n      let command = input.split(\"(\")[0];\n      command = command.toLowerCase();\n      if (command === input) throw new Error(\"Invalid command syntax\");\n\n      let args = input.split(\"(\")[1].split(\")\")[0];\n      if (args === \"\") args = [];\n      else args = args.split(\",\").map((arg) => arg.trim());\n\n      if (command in this.commands) {\n        let fn = this.commands[command];\n        // alert(`Command ${command} with arguments ${args}`);\n        fn(args);\n      } else {\n        throw new Error(`Command ${command} not found!`);\n      }\n    } catch (e) {\n      alert(e.message);\n      console.log(e);\n    }\n  }\n\n  renderSquare(i) {\n    return <Square style={this.state.squares[i]} />;\n  }\n\n  render() {\n    return (\n      <div className=\"flex-col p-8 align-center\">\n        <div className=\"text-4xl py-2\">Where's my Robot?</div>\n        <div>Git Repository (TODO)</div>\n        <div>\n          <div className=\"flex-col py-8 \">\n            <div className=\"flex\">\n              {this.renderSquare(20)}\n              {this.renderSquare(21)}\n              {this.renderSquare(22)}\n              {this.renderSquare(23)}\n              {this.renderSquare(24)}\n            </div>\n            <div className=\"flex\">\n              {this.renderSquare(15)}\n              {this.renderSquare(16)}\n              {this.renderSquare(17)}\n              {this.renderSquare(18)}\n              {this.renderSquare(19)}\n            </div>\n            <div className=\"flex\">\n              {this.renderSquare(10)}\n              {this.renderSquare(11)}\n              {this.renderSquare(12)}\n              {this.renderSquare(13)}\n              {this.renderSquare(14)}\n            </div>\n            <div className=\"flex\">\n              {this.renderSquare(5)}\n              {this.renderSquare(6)}\n              {this.renderSquare(7)}\n              {this.renderSquare(8)}\n              {this.renderSquare(9)}\n            </div>\n            <div className=\"flex\">\n              {this.renderSquare(0)}\n              {this.renderSquare(1)}\n              {this.renderSquare(2)}\n              {this.renderSquare(3)}\n              {this.renderSquare(4)}\n            </div>\n          </div>\n        </div>\n        <div className=\"p-4 border rounded-l\">\n          {/* <Console\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            value={this.state.value}\n          /> */}\n          <div className=\"px-2\">\n            <div className=\"text-2xl font-semibold pt-1 pb-3\">\n              {\">\"}_ Terminal\n            </div>\n            <form\n              className=\"text-l font-mono font-medium\"\n              onSubmit={this.handleSubmit}\n            >\n              <label>\n                robo: $\n                <input\n                  className=\"py-2 pl-2 focus:outline-none\"\n                  type=\"text\"\n                  value={this.value}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <input\n                className=\"bg-green-700 mx-3 my-2 p-2 rounded text-mono font-semibold text-white\"\n                type=\"submit\"\n                value=\"Run\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}