{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/t1/wheres_my_robot/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.css\"; // function Square(props) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-32 h-32 border-2 m-1\",\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n\n} // class Board extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       squares: Array(9).fill(\"S\"),\n//     };\n//   }\n//   handleClick(i) {\n//     const squares = this.state.squares.slice();\n//     squares[i] = \"X\";\n//     this.setState({ squares: squares });\n//   }\n//   renderSquare(i) {\n//     return <Square value={this.state.squares[i]} />;\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// class Console extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return (\n//     );\n//   }\n// }\n\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(25).fill(null)\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [this.renderSquare(20), this.renderSquare(21), this.renderSquare(22), this.renderSquare(23), this.renderSquare(24)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [this.renderSquare(15), this.renderSquare(16), this.renderSquare(17), this.renderSquare(18), this.renderSquare(19)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [this.renderSquare(10), this.renderSquare(11), this.renderSquare(12), this.renderSquare(13), this.renderSquare(14)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [this.renderSquare(5), this.renderSquare(6), this.renderSquare(7), this.renderSquare(8), this.renderSquare(9)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2), this.renderSquare(3), this.renderSquare(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      squares: Array(25).fill(null),\n      pos: [null, null],\n      dir: null\n    };\n    this.commands = {\n      place: args => {\n        // check if arguments ar valid\n        if (args.length !== 3) throw Error(\"Place: Should have 3 arguments\");\n        let [x, y, dir] = args;\n        if (isNaN(x) || isNaN(y) || ![\"NORTH\", \"SOUTH\", \"EAST\", \"WEST\"].includes(dir.toUpperCase())) throw Error(\"Place: Invalid arguments\");else [x, y, dir] = [+x, +y, dir.toUpperCase()]; // check if position is within bounds\n\n        if (x < 0 || x > 4 || y < 0 || y > 4) throw Error(`Place: Position ${x}, ${y} out of bounds`); // update state\n\n        const squares = Array(25).fill(null);\n        squares[5 * y + x] = \"X\";\n        this.setState({\n          squares: squares,\n          pos: [x, y],\n          dir: dir.toUpperCase()\n        });\n      },\n      move: args => {\n        if (!this.state.dir) throw Error(\"Move: Robot not placed\");\n        if (args.length) throw Error(\"Move: Should have no arguments\");\n        let [x, y] = this.state.pos;\n        let dir = this.state.dir; // check if position is within bounds and move accordingly\n\n        if (dir === \"NORTH\" && y < 4) y++;else if (dir === \"SOUTH\" && y > 0) y--;else if (dir === \"EAST\" && x < 4) x++;else if (dir === \"WEST\" && x > 0) x--;else console.log(\"Move: Robot cannot move\"); // update state\n\n        const squares = Array(9).fill(null);\n        squares[5 * y + x] = \"X\";\n        this.setState({\n          squares: squares,\n          pos: [x, y]\n        });\n      },\n      left: args => {\n        if (!this.state.dir) throw Error(\"Left: Robot not placed\");\n        if (args.length) throw Error(\"Left: Should have no arguments\");\n        let dir = this.state.dir;\n        if (dir === \"NORTH\") dir = \"WEST\";else if (dir === \"WEST\") dir = \"SOUTH\";else if (dir === \"SOUTH\") dir = \"EAST\";else if (dir === \"EAST\") dir = \"NORTH\";else throw Error(\"Left: Robot cannot turn left\"); // update state\n\n        this.setState({\n          dir: dir\n        });\n      },\n      right: args => {\n        if (!this.state.dir) throw Error(\"Right: Robot not placed\");\n        if (args.length) throw Error(\"Right: Should have no arguments\");\n        let dir = this.state.dir;\n        if (dir === \"NORTH\") dir = \"EAST\";else if (dir === \"EAST\") dir = \"SOUTH\";else if (dir === \"SOUTH\") dir = \"WEST\";else if (dir === \"WEST\") dir = \"NORTH\";else throw Error(\"Right: Robot cannot turn right\"); // update state\n\n        this.setState({\n          dir: dir\n        });\n      },\n      report: args => {\n        if (!this.state.dir) throw Error(\"Report: Robot not placed\");\n        if (args.length) throw Error(\"Report: Should have no arguments\");\n        let msg = `Robot is at position ${this.state.pos[0]}, ${this.state.pos[1]} and facing ${this.state.dir}`;\n        console.log(msg);\n        alert(msg);\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.processInput(this.state.value);\n  }\n\n  processInput(input) {\n    try {\n      let command = input.split(\"(\")[0];\n      command = command.toLowerCase();\n      if (command === input) throw new Error(\"Invalid command syntax\");\n      let args = input.split(\"(\")[1].split(\")\")[0];\n      if (args === \"\") args = [];else args = args.split(\",\").map(arg => arg.trim());\n\n      if (command in this.commands) {\n        let fn = this.commands[command]; // alert(`Command ${command} with arguments ${args}`);\n\n        fn(args);\n      } else {\n        throw new Error(`Command ${command} not found!`);\n      }\n    } catch (e) {\n      alert(e.message);\n      console.log(e);\n    }\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Robo:~ $\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.value,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 290,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/chris/Desktop/t1/wheres_my_robot/src/index.js"],"names":["React","ReactDOM","Square","Component","render","props","value","Grid","constructor","state","squares","Array","fill","renderSquare","i","Game","pos","dir","commands","place","args","length","Error","x","y","isNaN","includes","toUpperCase","setState","move","console","log","left","right","report","msg","alert","handleChange","bind","handleSubmit","event","target","preventDefault","processInput","input","command","split","toLowerCase","map","arg","trim","fn","e","message","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.css\";\n\n// function Square(props) {\nclass Square extends React.Component {\n  render() {\n    return <div className=\"w-32 h-32 border-2 m-1\">{this.props.value}</div>;\n  }\n}\n\n// class Board extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       squares: Array(9).fill(\"S\"),\n//     };\n//   }\n\n//   handleClick(i) {\n//     const squares = this.state.squares.slice();\n//     squares[i] = \"X\";\n//     this.setState({ squares: squares });\n//   }\n\n//   renderSquare(i) {\n//     return <Square value={this.state.squares[i]} />;\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//           {this.renderSquare()}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class Console extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return (\n//     );\n//   }\n// }\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(25).fill(null),\n    };\n  }\n\n  renderSquare(i) {\n    return <Square value={this.state.squares[i]} />;\n  }\n\n  \n\n  render() {\n    return (\n      <div>\n        <div className=\"flex\">\n          {this.renderSquare(20)}\n          {this.renderSquare(21)}\n          {this.renderSquare(22)}\n          {this.renderSquare(23)}\n          {this.renderSquare(24)}\n        </div>\n        <div className=\"flex\">\n          {this.renderSquare(15)}\n          {this.renderSquare(16)}\n          {this.renderSquare(17)}\n          {this.renderSquare(18)}\n          {this.renderSquare(19)}\n        </div>\n        <div className=\"flex\">\n          {this.renderSquare(10)}\n          {this.renderSquare(11)}\n          {this.renderSquare(12)}\n          {this.renderSquare(13)}\n          {this.renderSquare(14)}\n        </div>\n        <div className=\"flex\">\n          {this.renderSquare(5)}\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n          {this.renderSquare(9)}\n        </div>\n        <div className=\"flex\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: \"\",\n      squares: Array(25).fill(null),\n      pos: [null, null],\n      dir: null,\n    };\n\n    this.commands = {\n      place: (args) => {\n        // check if arguments ar valid\n        if (args.length !== 3) throw Error(\"Place: Should have 3 arguments\");\n        let [x, y, dir] = args;\n        if (\n          isNaN(x) ||\n          isNaN(y) ||\n          ![\"NORTH\", \"SOUTH\", \"EAST\", \"WEST\"].includes(dir.toUpperCase())\n        )\n          throw Error(\"Place: Invalid arguments\");\n        else [x, y, dir] = [+x, +y, dir.toUpperCase()];\n\n        // check if position is within bounds\n        if (x < 0 || x > 4 || y < 0 || y > 4)\n          throw Error(`Place: Position ${x}, ${y} out of bounds`);\n\n        // update state\n        const squares = Array(25).fill(null);\n        squares[5 * y + x] = \"X\";\n        this.setState({\n          squares: squares,\n          pos: [x, y],\n          dir: dir.toUpperCase(),\n        });\n      },\n      move: (args) => {\n        if (!this.state.dir) throw Error(\"Move: Robot not placed\");\n        if (args.length) throw Error(\"Move: Should have no arguments\");\n\n        let [x, y] = this.state.pos;\n        let dir = this.state.dir;\n\n        // check if position is within bounds and move accordingly\n        if (dir === \"NORTH\" && y < 4) y++;\n        else if (dir === \"SOUTH\" && y > 0) y--;\n        else if (dir === \"EAST\" && x < 4) x++;\n        else if (dir === \"WEST\" && x > 0) x--;\n        else console.log(\"Move: Robot cannot move\");\n\n        // update state\n        const squares = Array(9).fill(null);\n        squares[5 * y + x] = \"X\";\n        this.setState({\n          squares: squares,\n          pos: [x, y],\n        });\n      },\n      left: (args) => {\n        if (!this.state.dir) throw Error(\"Left: Robot not placed\");\n        if (args.length) throw Error(\"Left: Should have no arguments\");\n\n        let dir = this.state.dir;\n        if (dir === \"NORTH\") dir = \"WEST\";\n        else if (dir === \"WEST\") dir = \"SOUTH\";\n        else if (dir === \"SOUTH\") dir = \"EAST\";\n        else if (dir === \"EAST\") dir = \"NORTH\";\n        else throw Error(\"Left: Robot cannot turn left\");\n\n        // update state\n        this.setState({ dir: dir });\n      },\n      right: (args) => {\n        if (!this.state.dir) throw Error(\"Right: Robot not placed\");\n        if (args.length) throw Error(\"Right: Should have no arguments\");\n\n        let dir = this.state.dir;\n        if (dir === \"NORTH\") dir = \"EAST\";\n        else if (dir === \"EAST\") dir = \"SOUTH\";\n        else if (dir === \"SOUTH\") dir = \"WEST\";\n        else if (dir === \"WEST\") dir = \"NORTH\";\n        else throw Error(\"Right: Robot cannot turn right\");\n\n        // update state\n        this.setState({ dir: dir });\n      },\n      report: (args) => {\n        if (!this.state.dir) throw Error(\"Report: Robot not placed\");\n        if (args.length) throw Error(\"Report: Should have no arguments\");\n\n        let msg = `Robot is at position ${this.state.pos[0]}, ${this.state.pos[1]} and facing ${this.state.dir}`;\n        console.log(msg);\n        alert(msg);\n      },\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.processInput(this.state.value);\n  }\n\n  processInput(input) {\n    try {\n      let command = input.split(\"(\")[0];\n      command = command.toLowerCase();\n      if (command === input) throw new Error(\"Invalid command syntax\");\n\n      let args = input.split(\"(\")[1].split(\")\")[0];\n      if (args === \"\") args = [];\n      else args = args.split(\",\").map((arg) => arg.trim());\n\n      if (command in this.commands) {\n        let fn = this.commands[command];\n        // alert(`Command ${command} with arguments ${args}`);\n        fn(args);\n      } else {\n        throw new Error(`Command ${command} not found!`);\n      }\n    } catch (e) {\n      alert(e.message);\n      console.log(e);\n    }\n  }\n\n  renderSquare(i) {\n    return <Square value={this.state.squares[i]} />;\n  }\n\n  render() {\n    return (\n      <div className=\"flex-col\">\n        <div>\n          <div>\n            <Grid />\n          </div>\n        </div>\n        <div className=\"p-4\">\n          {/* <Console\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            value={this.state.value}\n          /> */}\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Robo:~ $\n              <input\n                type=\"text\"\n                value={this.value}\n                onChange={this.handleChange}\n              />\n            </label>\n            <input type=\"submit\" value=\"Run\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}